@model Cesgranrio.CorretorDeProvas.Web.Models.RespostaVM

@{
    ViewBag.Title = "Corrigir resposta";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int i = 0;
}

@using (Html.BeginForm())
{
    /*evitamos cross site request forgery*/
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="header">

                    <h4 class="title">Corrigir resposta</h4>
                    <p class="category">Dê as notas para a resposta abaixo</p>

                </div>
                <div class="content">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.RespostaID)
                    
                    @Html.HiddenFor(model => model.RespostaControleVersao)
                    
                    <div class="row">
                        <div class="col-md-12">

                            <div class="form-group">
                                @Html.LabelFor(model => model.QuestaoID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Questao.QuestaoEnunciado, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                    @Html.HiddenFor(model => model.QuestaoID)
                                    @Html.HiddenFor(model => model.Questao.QuestaoEnunciado)
                                    @Html.ValidationMessageFor(model => model.QuestaoID, "", new { @class = "text-danger" })

                                    
                                    <h5>Grade de correção (escolha apenas uma)</h5>
                                    <ul class="nobullet">
                                        <li><input type="radio" name="grade" value="1" id="grade1" @Html.Raw(Model.RespostaGradeEscolhida==1?"checked='checked'":"")/> <label for="grade1">Fidelidade ao tema: 0,00 a @Html.Raw(Model.Questao.QuestaoGradeFidelidadeAoTema.ToString("N2"))</label></li>
                                        <li><input type="radio" name="grade" value="2" id="grade2" @Html.Raw(Model.RespostaGradeEscolhida==2?"checked='checked'":"") /> <label for="grade2">Organizacao de ideias: 0,00 a @Html.Raw(Model.Questao.QuestaoGradeOrganizacaoIdeias.ToString("N2"))</label></li>
                                        <li><input type="radio" name="grade" value="3" id="grade3" @Html.Raw(Model.RespostaGradeEscolhida==3?"checked='checked'":"")/> <label for="grade3">Nivel de Linguagem: 0,00 a @Html.Raw(Model.Questao.QuestaoGradeNivelDeLinguagem.ToString("N2"))</label></li>
                                        <li><input type="radio" name="grade" value="4" id="grade4" @Html.Raw(Model.RespostaGradeEscolhida==4?"checked='checked'":"") /> <label for="grade4">Domínio das regras: 0,00 a @Html.Raw(Model.Questao.QuestaoGradeDominioDasRegras.ToString("N2"))</label></li>
                                        
                                        @Html.HiddenFor(model => model.RespostaGradeEscolhida)
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">

                            <div class="form-group">
                                @Html.LabelFor(model => model.UsuarioID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Usuario.UsuarioCPF, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                    @Html.HiddenFor(model => model.UsuarioID)
                                    @Html.HiddenFor(model => model.Usuario.UsuarioCPF)
                                    @Html.ValidationMessageFor(model => model.UsuarioID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">

                            <div class="form-group">
                                @Html.LabelFor(model => model.CandidatoID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Candidato.CandidatoNome, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                    @Html.HiddenFor(model => model.CandidatoID)
                                    @Html.HiddenFor(model => model.Candidato.CandidatoNome)
                                    @Html.ValidationMessageFor(model => model.CandidatoID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">

                            <div class="form-group">
                                @Html.LabelFor(model => model.RespostaNota, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.RespostaNota, new { htmlAttributes = new { @class = "form-control grade" } })
                                    @Html.ValidationMessageFor(model => model.RespostaNota, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10 salvar">
                                    <input type="submit" value="Confirmar nota" class="btn btn-primary btn-lg mb" />
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                
                <div class="content">
                    <a href="data:image/jpg;base64,@Convert.ToBase64String(Model.RespostaImagem)" alt="Imagem da resposta" data-lightbox="image-@i++" data-title="Mostrar resposta gerada pelo simulador"><img src="data:image/jpg;base64,@Convert.ToBase64String(Model.RespostaImagem)" alt="" width="100%" /></a>
                    <br />
                    <p class="category text-center">Obs: esta imagem foi gerada num Simulador</p>
                </div>
            </div>
        </div>
    </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $('input[name=grade]').change(function () {
            
            if ($(this).is(':checked'))
                $('input[name=RespostaGradeEscolhida]').val($(this).val());

            console.log($('input[name=RespostaGradeEscolhida]').val());
        });
        

    });
</script>


    }
